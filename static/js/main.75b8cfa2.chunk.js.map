{"version":3,"sources":["serviceWorker.js","components/People/PersonCard.js","components/People/PersonCardList.js","components/Planets/PlanetCard.js","components/Planets/PlanetCardList.js","components/Films/FilmCard.js","components/Films/FilmCardList.js","components/Species/SpeciesCard.js","components/Species/SpeciesCardList.js","components/Starships/StarshipCard.js","components/Starships/StarshipCardList.js","components/Vehicles/VehicleCard.js","components/Vehicles/VehicleCardList.js","components/SearchBox.js","components/Menu.js","components/Navigation.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","PeopleCard","_ref","name","height","mass","hairColor","skinColor","eyeColor","gender","react_default","a","createElement","className","PersonCardList","people","map","person","i","PersonCard","key","url","hair_color","skin_color","eye_color","PlanetCard","climate","terrain","population","PlanetCardList","planets","planet","Planets_PlanetCard","FilmCard","title","episode","producer","release_date","FilmCardList","films","film","Films_FilmCard","episode_id","SpeciesCard","classification","average_height","skin_colors","hair_colors","SpeciesCardList","species","spec","Species_SpeciesCard","StarshipCard","cost_in_credits","hyperdrive_rating","starship_class","StarshipCardList","starships","starship","Starships_StarshipCard","VehicleCard","model","max_atmosphering_speed","VehicleCardList","vehicles","vehicle","Vehicles_VehicleCard","SearchBox","searchfield","searchChange","type","placeholder","onChange","Menu","onButtonSelect","onClick","Navigation","style","display","justifyContent","reload","particlesOptions","particles","number","value","density","enable","value_area","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","distance","line_linked","opacity","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","route","state","results","_this2","_this$state","fetch","concat","then","response","json","data","filteredResults","filter","toLowerCase","includes","length","components_Menu","particles_default","params","components_Navigation","components_SearchBox","Films_FilmCardList","People_PersonCardList","Planets_PlanetCardList","Species_SpeciesCardList","Starships_StarshipCardList","Vehicles_VehicleCardList","Component","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75b8cfa2.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst PeopleCard = ({ name, height, mass, hairColor, skinColor, eyeColor, gender}) => {\r\n    return (\r\n        <div className='tc dib ma2 pa3 br3 mv3 ba bw2 grow b--dark-gray bg-washed-green'>\r\n            <h2>{name}</h2>\r\n            <p>height: {height}</p>\r\n            <p>mass: {mass}</p>\r\n            <p>hair color: {hairColor}</p>\r\n            <p>skin color: {skinColor}</p>\r\n            <p>eye color: {eyeColor}</p>\r\n            <p>gender: {gender}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default PeopleCard;\r\n","import React from 'react';\r\nimport PersonCard from './PersonCard';\r\n\r\nconst PersonCardList = ({ people }) => {\r\n    return (\r\n        <div>\r\n            { people.map((person,i) => {\r\n                return (\r\n                    <PersonCard key={people[i].url}\r\n                                name={people[i].name}\r\n                                height={people[i].height}\r\n                                mass={people[i].mass} \r\n                                hairColor={people[i].hair_color}\r\n                                skinColor={people[i].skin_color}\r\n                                eyeColor={people[i].eye_color}\r\n                                gender={people[i].gender}\r\n                                />\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonCardList;","import React from 'react';\r\n\r\nconst PlanetCard = ({ name, climate, terrain, population }) => {\r\n    return (\r\n        <div className='tc dib ma2 pa3 br3 mv3 ba bw2 grow b--dark-gray bg-washed-green'>\r\n            <h2>{name}</h2>\r\n            <p>climate: {climate}</p>\r\n            <p>terrain: {terrain}</p>\r\n            <p>population: {population}</p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default PlanetCard;","import React from 'react';\r\nimport PlanetCard from './PlanetCard';\r\n\r\nconst PlanetCardList = ({ planets }) => {\r\n    return (\r\n        <div>\r\n            { planets.map((planet,i) => {\r\n                return (\r\n                    <PlanetCard key={planets[i].url}\r\n                                name={planets[i].name}\r\n                                climate={planets[i].climate}\r\n                                terrain={planets[i].terrain}\r\n                                population={planets[i].population} \r\n                                />\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanetCardList;","import React from 'react';\r\n\r\nconst FilmCard = ({ title, episode, producer, release_date}) => {\r\n    return (\r\n        <div className='tc dib ma2 pa3 br3 mv3 ba bw2 grow b--dark-gray bg-washed-green'>\r\n            <h2>{title}</h2>\r\n            <p>episode: {episode}</p>\r\n            <p>producer: {producer}</p>\r\n            <p>release date: {release_date}</p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default FilmCard;","import React from 'react';\r\nimport FilmCard from './FilmCard';\r\n\r\nconst FilmCardList = ({ films }) => {\r\n    return (\r\n        <div>\r\n            { films.map((film,i) => {\r\n                return (\r\n                    <FilmCard key={films[i].url}\r\n                                title={films[i].title}\r\n                                episode={films[i].episode_id}\r\n                                producer={films[i].producer} \r\n                                release_date={films[i].release_date} />\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilmCardList;","import React from 'react';\r\n\r\nconst SpeciesCard = ({ name, classification, average_height, skin_colors, hair_colors }) => {\r\n    return (\r\n        <div className='tc dib ma2 pa3 br3 mv3 ba bw2 grow b--dark-gray bg-washed-green'>\r\n            <h2>{name}</h2>\r\n            <p>classification: {classification}</p>\r\n            <p>average height: {average_height}</p>\r\n            <p>skin colors: {skin_colors}</p>\r\n            <p>hair colors: {hair_colors}</p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default SpeciesCard;","import React from 'react';\r\nimport SpeciesCard from './SpeciesCard';\r\n\r\nconst SpeciesCardList = ({ species }) => {\r\n    return (\r\n        <div>\r\n            { species.map((spec,i) => {\r\n                return (\r\n                    <SpeciesCard key={species[i].url}\r\n                                name={species[i].name}\r\n                                classification={species[i].classification}\r\n                                average_height={species[i].average_height}\r\n                                skin_colors={species[i].skin_colors}\r\n                                hair_colors={species[i].hair_colors} \r\n                                />\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpeciesCardList;","import React from 'react';\r\n\r\nconst StarshipCard = ({ name, cost_in_credits, hyperdrive_rating, starship_class }) => {\r\n    return (\r\n        <div className='tc dib ma2 pa3 br3 mv3 ba bw2 grow b--dark-gray bg-washed-green'>\r\n            <h2>{name}</h2>\r\n            <p>cost in credits: {cost_in_credits}</p>\r\n            <p>hyperdrive rating: {hyperdrive_rating}</p>\r\n            <p>starship class: {starship_class}</p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default StarshipCard;\r\n","import React from 'react';\r\nimport StarshipCard from './StarshipCard';\r\n\r\nconst StarshipCardList = ({ starships }) => {\r\n    return (\r\n        <div>\r\n            { starships.map((starship,i) => {\r\n                return (\r\n                    <StarshipCard key={starships[i].url}\r\n                                name={starships[i].name}\r\n                                cost_in_credits={starships[i].cost_in_credits}\r\n                                hyperdrive_rating={starships[i].hyperdrive_rating} \r\n                                starship_class={starships[i].starship_class}/>\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarshipCardList;","import React from 'react';\r\n\r\nconst VehicleCard = ({ name, model, cost_in_credits, max_atmosphering_speed }) => {\r\n    return (\r\n        <div className='tc dib ma2 pa3 br3 mv3 ba bw2 grow b--dark-gray bg-washed-green'>\r\n            <h2>{name}</h2>\r\n            <p>model: {model}</p>\r\n            <p>cost in credits: {cost_in_credits}</p>\r\n            <p>max atmosphering speed: {max_atmosphering_speed}</p>\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\n\r\nexport default VehicleCard;","import React from 'react';\r\nimport VehicleCard from './VehicleCard';\r\n\r\nconst VehicleCardList = ({ vehicles }) => {\r\n    return (\r\n        <div>\r\n            { vehicles.map((vehicle,i) => {\r\n                return (\r\n                    <VehicleCard key={vehicles[i].url}\r\n                                name={vehicles[i].name}\r\n                                model={vehicles[i].model}\r\n                                cost_in_credits={vehicles[i].cost_in_credits}\r\n                                max_atmosphering_speed={vehicles[i].max_atmosphering_speed} />\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VehicleCardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input\r\n        className='pa3 mb5 ba br2 b--green bg-washed-green'\r\n        type='search' \r\n        placeholder='search'\r\n        onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Menu = ({ onButtonSelect }) => {\r\n    return (\r\n    <div className='mt4'>\r\n    <button onClick={() => onButtonSelect('films')} \r\n    className=\"f3 dim ba bw0 ma3 ph3 pv3 bg-washed-green b--dark-gray dib br2 pointer\">Films</button>\r\n    <button onClick={() => onButtonSelect('people')} \r\n    className=\"f3 dim ba bw0 ma3 ph3 pv3 bg-washed-green b--dark-gray dib br2 pointer\">People</button>\r\n    <button onClick={() => onButtonSelect('planets')} \r\n    className=\"f3 dim ba bw0 ma3 ph3 pv3 bg-washed-green b--dark-gray dib br2 pointer\">Planets</button>\r\n    <button onClick={() => onButtonSelect('species')} \r\n    className=\"f3 dim ba bw0 ma3 ph3 pv3 bg-washed-green b--dark-gray dib br2 pointer\">Species</button>\r\n    <button onClick={() => onButtonSelect('starships')} \r\n    className=\"f3 dim ba bw0 ma3 ph3 pv3 bg-washed-green b--dark-gray dib br2 pointer\">Starships</button>\r\n    <button onClick={() => onButtonSelect('vehicles')} \r\n    className=\"f3 dim ba bw0 ma3 ph3 pv3 bg-washed-green b--dark-gray dib br2 pointer\">Vehicles</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <h1 onClick={() => window.location.reload()} className='f3 link dim pa3 underline h1a3 pointer'>Menu</h1>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport PersonCardList from '../components/People/PersonCardList';\r\nimport PlanetCardList from '../components/Planets/PlanetCardList';\r\nimport FilmCardList from '../components/Films/FilmCardList';\r\nimport SpeciesCardList from '../components/Species/SpeciesCardList';\r\nimport StarshipCardList from '../components/Starships/StarshipCardList';\r\nimport VehicleCardList from '../components/Vehicles/VehicleCardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Menu from '../components/Menu';\r\nimport Navigation from '../components/Navigation';\r\nimport './App.css';\r\nimport Particles from 'react-particles-js';\r\n\r\n\r\nconst particlesOptions = {\r\n    particles: {\r\n      number: {\r\n        value: 87,\r\n        density: {\r\n          enable: true,\r\n          value_area: 1000\r\n        }  \r\n      }\r\n      },\r\n      \"interactivity\": {\r\n        \"detect_on\": \"window\",\r\n        \"events\": {\r\n          \"onhover\": {\r\n            \"enable\": true,\r\n            \"mode\": \"repulse\"\r\n          },\r\n          \"onclick\": {\r\n            \"enable\": true,\r\n            \"mode\": \"push\"\r\n          },\r\n          \"resize\": true\r\n        },\r\n        \"modes\": {\r\n          \"grab\": {\r\n            \"distance\": 800,\r\n            \"line_linked\": {\r\n              \"opacity\": 1\r\n            }\r\n          },\r\n        }\r\n      },\r\n    }\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: [],\r\n            people: [],\r\n            films: [],\r\n            planets: [],\r\n            species: [],\r\n            starships: [],\r\n            vehicles: [],\r\n            searchfield: '',\r\n            route: 'menu'\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    onButtonSelect = (route) => {\r\n        this.setState({ route: route})\r\n    }\r\n    \r\n      \r\n    render() {\r\n        const { results, searchfield, route } = this.state;\r\n\r\n            \r\n        if (route !== 'menu') {\r\n            fetch(`https://swapi.co/api/${route}/`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ results: data.results }))                \r\n        }\r\n\r\n        if (route === 'films') {\r\n            var filteredResults = results.filter(data => {\r\n            return data.title.toLowerCase().includes(searchfield.toLowerCase())\r\n            })           \r\n        } else {\r\n            filteredResults = results.filter(data => {\r\n            return data.name.toLowerCase().includes(searchfield.toLowerCase())\r\n            })\r\n        }\r\n  \r\n        if (!results.length && route !== 'menu') {\r\n        return <h1 className='tc'>Loading...</h1> \r\n        } else {\r\n            switch (route) {\r\n                default:\r\n                    return (\r\n                        <div className='tc'>\r\n                            <h1 className='f1 mt5'>Star Wars</h1>\r\n                            <h3 className='f3 mt4'>Come explore the Star Wars world!</h3>\r\n                            <Menu onButtonSelect={this.onButtonSelect} />\r\n                            <Particles className='particles'\r\n                            params = {particlesOptions} /> \r\n                        </div>\r\n                    );\r\n                case 'films':\r\n                    return (\r\n                        <div className='tc'>\r\n                            <Navigation />\r\n                            <h1 className='f1'>Star Wars Films</h1>\r\n                            <SearchBox searchChange={this.onSearchChange} />\r\n                            <FilmCardList films={filteredResults} />\r\n                        </div>\r\n                    ); \r\n                case 'people':\r\n                    return (\r\n                        <div className='tc'>\r\n                            <Navigation />\r\n                            <h1 className='f1'> Star Wars People</h1>\r\n                            <SearchBox searchChange={this.onSearchChange} />\r\n                            <PersonCardList people={filteredResults} />\r\n                        </div>\r\n                    );\r\n                case 'planets':\r\n                    return (\r\n                        <div className='tc'>\r\n                            <Navigation />\r\n                            <h1 className='f1'>Star Wars Planets</h1>\r\n                            <SearchBox searchChange={this.onSearchChange} />\r\n                            <PlanetCardList planets={filteredResults} />\r\n                        </div>\r\n                    );\r\n                case 'species':\r\n                    return (\r\n                        <div className='tc'>\r\n                            <Navigation />\r\n                            <h1 className='f1'>Star Wars Species</h1>\r\n                            <SearchBox searchChange={this.onSearchChange} />\r\n                            <SpeciesCardList species={filteredResults} />\r\n                        </div>\r\n                    );\r\n                case 'starships':\r\n                    return (\r\n                        <div className='tc'>\r\n                            <Navigation />\r\n                            <h1 className='f1'>Star Wars Starships</h1>\r\n                            <SearchBox searchChange={this.onSearchChange} />\r\n                            <StarshipCardList starships={filteredResults} />\r\n                        </div>\r\n                    );\r\n                case 'vehicles':\r\n                    return (\r\n                        <div className='tc'>\r\n                            <Navigation />\r\n                            <h1 className='f1'>Star Wars Vehicles</h1>\r\n                            <SearchBox searchChange={this.onSearchChange} />\r\n                            <VehicleCardList vehicles={filteredResults} />\r\n                        </div>\r\n                    );\r\n            }\r\n        \r\n        }\r\n            \r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}